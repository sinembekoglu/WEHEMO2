#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wehemo.Business
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Wehemo")]
	public partial class WehemoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertSTATUS_CODE(STATUS_CODE instance);
    partial void UpdateSTATUS_CODE(STATUS_CODE instance);
    partial void DeleteSTATUS_CODE(STATUS_CODE instance);
    partial void InsertTEST(TEST instance);
    partial void UpdateTEST(TEST instance);
    partial void DeleteTEST(TEST instance);
    partial void InsertTEST_RESULT(TEST_RESULT instance);
    partial void UpdateTEST_RESULT(TEST_RESULT instance);
    partial void DeleteTEST_RESULT(TEST_RESULT instance);
    #endregion
		
		public WehemoDataContext() : 
				base(global::Wehemo.Business.Properties.Settings.Default.WehemoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WehemoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WehemoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WehemoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WehemoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<STATUS_CODE> STATUS_CODEs
		{
			get
			{
				return this.GetTable<STATUS_CODE>();
			}
		}
		
		public System.Data.Linq.Table<TEST> TESTs
		{
			get
			{
				return this.GetTable<TEST>();
			}
		}
		
		public System.Data.Linq.Table<TEST_RESULT> TEST_RESULTs
		{
			get
			{
				return this.GetTable<TEST_RESULT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _NAME;
		
		private string _EMAIL;
		
		private string _PASSWORD;
		
		private System.DateTime _CREATE_DATE;
		
		private System.Nullable<System.DateTime> _UPDATE_DATE;
		
		private bool _DELETED;
		
		private EntitySet<TEST> _TESTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnUPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUPDATE_DATEChanged();
    partial void OnDELETEDChanging(bool value);
    partial void OnDELETEDChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._TESTs = new EntitySet<TEST>(new Action<TEST>(this.attach_TESTs), new Action<TEST>(this.detach_TESTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UPDATE_DATE
		{
			get
			{
				return this._UPDATE_DATE;
			}
			set
			{
				if ((this._UPDATE_DATE != value))
				{
					this.OnUPDATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATE_DATE = value;
					this.SendPropertyChanged("UPDATE_DATE");
					this.OnUPDATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELETED", DbType="Bit NOT NULL")]
		public bool DELETED
		{
			get
			{
				return this._DELETED;
			}
			set
			{
				if ((this._DELETED != value))
				{
					this.OnDELETEDChanging(value);
					this.SendPropertyChanging();
					this._DELETED = value;
					this.SendPropertyChanged("DELETED");
					this.OnDELETEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_TEST", Storage="_TESTs", ThisKey="ID", OtherKey="CUSTOMER_ID")]
		public EntitySet<TEST> TESTs
		{
			get
			{
				return this._TESTs;
			}
			set
			{
				this._TESTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TESTs(TEST entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_TESTs(TEST entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATUS_CODE")]
	public partial class STATUS_CODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CODE;
		
		private string _DESCRIPTION;
		
		private EntitySet<TEST_RESULT> _TEST_RESULTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCODEChanging(int value);
    partial void OnCODEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
		
		public STATUS_CODE()
		{
			this._TEST_RESULTs = new EntitySet<TEST_RESULT>(new Action<TEST_RESULT>(this.attach_TEST_RESULTs), new Action<TEST_RESULT>(this.detach_TEST_RESULTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_CODE_TEST_RESULT", Storage="_TEST_RESULTs", ThisKey="CODE", OtherKey="STATUS_CODE")]
		public EntitySet<TEST_RESULT> TEST_RESULTs
		{
			get
			{
				return this._TEST_RESULTs;
			}
			set
			{
				this._TEST_RESULTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TEST_RESULTs(TEST_RESULT entity)
		{
			this.SendPropertyChanging();
			entity.STATUS_CODE1 = this;
		}
		
		private void detach_TEST_RESULTs(TEST_RESULT entity)
		{
			this.SendPropertyChanging();
			entity.STATUS_CODE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEST")]
	public partial class TEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _CUSTOMER_ID;
		
		private string _URL;
		
		private System.DateTime _CREATE_DATE;
		
		private bool _DELETED;
		
		private int _STATUSCODE;
		
		private System.DateTime _TEST_DATE;
		
		private EntitySet<TEST_RESULT> _TEST_RESULTs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCUSTOMER_IDChanging(System.Guid value);
    partial void OnCUSTOMER_IDChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnDELETEDChanging(bool value);
    partial void OnDELETEDChanged();
    partial void OnSTATUSCODEChanging(int value);
    partial void OnSTATUSCODEChanged();
    partial void OnTEST_DATEChanging(System.DateTime value);
    partial void OnTEST_DATEChanged();
    #endregion
		
		public TEST()
		{
			this._TEST_RESULTs = new EntitySet<TEST_RESULT>(new Action<TEST_RESULT>(this.attach_TEST_RESULTs), new Action<TEST_RESULT>(this.detach_TEST_RESULTs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSTOMER_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CUSTOMER_ID
		{
			get
			{
				return this._CUSTOMER_ID;
			}
			set
			{
				if ((this._CUSTOMER_ID != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCUSTOMER_IDChanging(value);
					this.SendPropertyChanging();
					this._CUSTOMER_ID = value;
					this.SendPropertyChanged("CUSTOMER_ID");
					this.OnCUSTOMER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DELETED", DbType="Bit NOT NULL")]
		public bool DELETED
		{
			get
			{
				return this._DELETED;
			}
			set
			{
				if ((this._DELETED != value))
				{
					this.OnDELETEDChanging(value);
					this.SendPropertyChanging();
					this._DELETED = value;
					this.SendPropertyChanged("DELETED");
					this.OnDELETEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUSCODE", DbType="Int NOT NULL")]
		public int STATUSCODE
		{
			get
			{
				return this._STATUSCODE;
			}
			set
			{
				if ((this._STATUSCODE != value))
				{
					this.OnSTATUSCODEChanging(value);
					this.SendPropertyChanging();
					this._STATUSCODE = value;
					this.SendPropertyChanged("STATUSCODE");
					this.OnSTATUSCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEST_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime TEST_DATE
		{
			get
			{
				return this._TEST_DATE;
			}
			set
			{
				if ((this._TEST_DATE != value))
				{
					this.OnTEST_DATEChanging(value);
					this.SendPropertyChanging();
					this._TEST_DATE = value;
					this.SendPropertyChanged("TEST_DATE");
					this.OnTEST_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEST_TEST_RESULT", Storage="_TEST_RESULTs", ThisKey="ID", OtherKey="TEST_ID")]
		public EntitySet<TEST_RESULT> TEST_RESULTs
		{
			get
			{
				return this._TEST_RESULTs;
			}
			set
			{
				this._TEST_RESULTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_TEST", Storage="_CUSTOMER", ThisKey="CUSTOMER_ID", OtherKey="ID", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.TESTs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.TESTs.Add(this);
						this._CUSTOMER_ID = value.ID;
					}
					else
					{
						this._CUSTOMER_ID = default(System.Guid);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TEST_RESULTs(TEST_RESULT entity)
		{
			this.SendPropertyChanging();
			entity.TEST = this;
		}
		
		private void detach_TEST_RESULTs(TEST_RESULT entity)
		{
			this.SendPropertyChanging();
			entity.TEST = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEST_RESULT")]
	public partial class TEST_RESULT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _TEST_ID;
		
		private int _STATUS_CODE;
		
		private System.DateTime _CREATE_DATE;
		
		private EntityRef<STATUS_CODE> _STATUS_CODE1;
		
		private EntityRef<TEST> _TEST;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTEST_IDChanging(System.Guid value);
    partial void OnTEST_IDChanged();
    partial void OnSTATUS_CODEChanging(int value);
    partial void OnSTATUS_CODEChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    #endregion
		
		public TEST_RESULT()
		{
			this._STATUS_CODE1 = default(EntityRef<STATUS_CODE>);
			this._TEST = default(EntityRef<TEST>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEST_ID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TEST_ID
		{
			get
			{
				return this._TEST_ID;
			}
			set
			{
				if ((this._TEST_ID != value))
				{
					if (this._TEST.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTEST_IDChanging(value);
					this.SendPropertyChanging();
					this._TEST_ID = value;
					this.SendPropertyChanged("TEST_ID");
					this.OnTEST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATUS_CODE", DbType="Int NOT NULL")]
		public int STATUS_CODE
		{
			get
			{
				return this._STATUS_CODE;
			}
			set
			{
				if ((this._STATUS_CODE != value))
				{
					if (this._STATUS_CODE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTATUS_CODEChanging(value);
					this.SendPropertyChanging();
					this._STATUS_CODE = value;
					this.SendPropertyChanged("STATUS_CODE");
					this.OnSTATUS_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STATUS_CODE_TEST_RESULT", Storage="_STATUS_CODE1", ThisKey="STATUS_CODE", OtherKey="CODE", IsForeignKey=true)]
		public STATUS_CODE STATUS_CODE1
		{
			get
			{
				return this._STATUS_CODE1.Entity;
			}
			set
			{
				STATUS_CODE previousValue = this._STATUS_CODE1.Entity;
				if (((previousValue != value) 
							|| (this._STATUS_CODE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STATUS_CODE1.Entity = null;
						previousValue.TEST_RESULTs.Remove(this);
					}
					this._STATUS_CODE1.Entity = value;
					if ((value != null))
					{
						value.TEST_RESULTs.Add(this);
						this._STATUS_CODE = value.CODE;
					}
					else
					{
						this._STATUS_CODE = default(int);
					}
					this.SendPropertyChanged("STATUS_CODE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TEST_TEST_RESULT", Storage="_TEST", ThisKey="TEST_ID", OtherKey="ID", IsForeignKey=true)]
		public TEST TEST
		{
			get
			{
				return this._TEST.Entity;
			}
			set
			{
				TEST previousValue = this._TEST.Entity;
				if (((previousValue != value) 
							|| (this._TEST.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TEST.Entity = null;
						previousValue.TEST_RESULTs.Remove(this);
					}
					this._TEST.Entity = value;
					if ((value != null))
					{
						value.TEST_RESULTs.Add(this);
						this._TEST_ID = value.ID;
					}
					else
					{
						this._TEST_ID = default(System.Guid);
					}
					this.SendPropertyChanged("TEST");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
